2020-08-02 07:51:37.183  INFO 10228 --- [main] c.xtm.ArtificialIntelligenceApplication  : Starting ArtificialIntelligenceApplication on DESKTOP-I45Q381 with PID 10228 (D:\artificial_intelligence\target\classes started by RHJ的设备 in D:\artificial_intelligence)
2020-08-02 07:51:37.203  INFO 10228 --- [main] c.xtm.ArtificialIntelligenceApplication  : No active profile set, falling back to default profiles: default
2020-08-02 07:51:38.841  INFO 10228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-02 07:51:38.911  INFO 10228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 70ms. Found 5 repository interfaces.
2020-08-02 07:51:39.262  INFO 10228 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82b85c84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-02 07:51:39.558  INFO 10228 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 07:51:39.588  INFO 10228 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 07:51:39.588  INFO 10228 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.19]
2020-08-02 07:51:39.718  INFO 10228 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/ai]     : Initializing Spring embedded WebApplicationContext
2020-08-02 07:51:39.718  INFO 10228 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2416 ms
2020-08-02 07:51:39.908  WARN 10228 --- [main] com.zaxxer.hikari.HikariConfig           : HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.
2020-08-02 07:51:39.908  INFO 10228 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-08-02 07:51:40.118  INFO 10228 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-08-02 07:51:40.248  INFO 10228 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-08-02 07:51:40.350  INFO 10228 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.10.Final}
2020-08-02 07:51:40.360  INFO 10228 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-08-02 07:51:40.671  INFO 10228 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-08-02 07:51:40.870  INFO 10228 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-08-02 07:51:41.633  INFO 10228 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-02 07:51:41.953  INFO 10228 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-08-02 07:51:42.505  WARN 10228 --- [main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-02 07:51:42.827  INFO 10228 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 07:51:42.917  INFO 10228 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 07:51:43.007  INFO 10228 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-08-02 07:51:43.028  INFO 10228 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-08-02 07:51:43.038  INFO 10228 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-08-02 07:51:43.258  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getArticlesUsingGET_1
2020-08-02 07:51:43.298  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: uploadImgUsingPOST_1
2020-08-02 07:51:43.308  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: clickArticleByIdUsingGET_1
2020-08-02 07:51:43.318  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getAndSortClickUsingGET_1
2020-08-02 07:51:43.318  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getArticleByIdUsingGET_1
2020-08-02 07:51:43.318  INFO 10228 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getArticlesUsingGET_2
2020-08-02 07:51:43.374  INFO 10228 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/ai'
2020-08-02 07:51:43.384  INFO 10228 --- [main] c.xtm.ArtificialIntelligenceApplication  : Started ArtificialIntelligenceApplication in 7.151 seconds (JVM running for 9.973)
2020-08-02 07:51:53.669  INFO 10228 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/ai]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 07:51:53.670  INFO 10228 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 07:51:53.683  INFO 10228 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-08-02 07:51:56.359  WARN 10228 --- [http-nio-8080-exec-10] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [1,666] milliseconds.
2020-08-02 07:52:25.935  INFO 10228 --- [http-nio-8080-exec-5] com.xtm.controller.NewsController        : {msg=, code=0, data=[NewsAuthor{id=14, author='管理员', title='数据库管理系统', content='<p><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">数据库管理系统</a><span>（英语：Database Management System，简称DBMS）是为管理</span><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93">数据库</a><span>而设计的电脑</span><a target="_blank" href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a><span>系统，一般具有存储、截取、安全保障、备份等基础功能。数据库管理系统可以依据它所支持的</span><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9E%8B">数据库模型</a><span>来作分类，例如关系式、</span><a target="_blank" href="https://baike.baidu.com/item/XML">XML</a><span>；或依据所支持的计算机类型来作分类，例如服务器群集、移动电话；或依据所用查询语言来作分类，例如</span><a target="_blank" href="https://baike.baidu.com/item/SQL">SQL</a><span>、</span><a target="_blank" href="https://baike.baidu.com/item/XQuery">XQuery</a><span>；或依据性能冲量重点来作分类，例如最大规模、最高运行速度；亦或其他的分类方式。不论使用哪种分类方式，一些</span><a target="_blank" href="https://baike.baidu.com/item/DBMS/1239170" data-lemmaid="1239170">DBMS</a><span>能够跨类别，例如，同时支持多种查询语言。</span><span class="sup--normal" data-sup="1" data-ctrmap=":1,">&nbsp;[1]</span><a class="sup-anchor" name="ref_[1]_1088">&nbsp;</a></p>', createTime=2019-06-27 13:00:11.0, authorId=null, account='admin', click=11}, NewsAuthor{id=15, author='管理员', title='结构化查询语言', content='<div class="para" label-module="para"><img src="http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif" alt="[草泥马]" data-w-e="1"><b>结构化查询语言</b>(Structured Query Language)简称SQL(发音：/ˈes kjuː ˈel/ "S-Q-L")，是一种特殊目的的编程语言，是一种数据库查询和<a target="_blank" href="https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/2317999" data-lemmaid="2317999">程序设计语言</a>，用于存取数据以及查询、更新和管理<a target="_blank" href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F">关系数据库系统</a>；同时也是<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/644744" data-lemmaid="644744">数据库脚本文件</a>的扩展名。</div><div class="para" label-module="para">结构化查询语言是高级的非过程化编程语言，允许用户在高层<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/1450" data-lemmaid="1450">数据结构</a>上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/215176" data-lemmaid="215176">数据库系统</a>, 可以使用相同的结构化查询语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能。</div><p style="text-align: left;">1986年10月，美国国家标准协会对SQL进行规范后，以此作为关系式数据库管理系统的标准语言（ANSI X3. 135-1986），1987年得到国际标准组织的支持下成为国际标准。不过各种通行的数据库系统在其实践过程中都对SQL规范作了某些编改和扩充。<i><b><u>所以，实际上不同数据库系统之间的SQL不能完全相互通用。</u></b></i></p><p><br></p>', createTime=2019-06-27 13:01:21.0, authorId=null, account='admin', click=25}, NewsAuthor{id=16, author='管理员', title='layer', content='<p><span>layui（谐音：类UI) 是一款采用自身模块规范编写的前端 UI 框架，遵循原生 HTML/CSS/JS 的书写与组织形式，门槛极低，拿来即用。其外在极简，却又不失饱满的内在，体积轻盈，组件丰盈，从核心代码到 API 的每一处细节都经过精心雕琢，非常适合界面的快速开发。layui 首个版本发布于2016年金秋，她区别于那些基于 MVVM 底层的 UI 框架，却并非逆道而行，而是信奉返璞归真之道。准确地说，她更多是为服务端程序员量身定做，你无需涉足各种前端工具的复杂配置，只需面对浏览器本身，让一切你所需要的元素与交互，从这里信手拈来。</span></p>', createTime=2019-06-27 13:11:00.0, authorId=null, account='admin', click=10}, NewsAuthor{id=17, author='管理员', title='JPA事务问题Executing an update/delete query', content='<p>如果JPA提示Executing an update/delete query，那是一定是因为Service层没有加@Transactional和再方法加@Modifying吧。</p><p><br></p><p>异常场景</p><p>spring-boot2+jpa执行新增修改删除操作时：</p><p><br></p><p>public interface UserRepository extends JpaRepository&lt;User , Integer&gt;{</p><p><br></p><p>&nbsp; &nbsp; @Modifying</p><p>&nbsp; &nbsp; @Query(value="update User c set c.state = ?1,c.lastupdatetime = ?2 where c.user_no= ?3")</p><p>&nbsp; &nbsp; void updateUser(int state,Date nowDate,String user_no);</p><p><br></p><p>}</p><p>异常： Executing an update/delete query</p><p><br></p><p>解决方案</p><p>因为jpa要求，’没有事务支持，不能执行更新和删除操作’。</p><p><br></p><p>所以反过来讲，就是在Service层或者Repository层上必须加@Transactional，来代表这是一个事务级别的操作，增删改查除了查都是事务级别的，就当这是一个规范也是ok的。</p><p>---------------------&nbsp;</p>', createTime=2019-06-27 13:12:11.0, authorId=null, account='admin', click=35}, NewsAuthor{id=21, author='熊天民', title='桂林电子科技大学', content='<div class="para" label-module="para"><b>桂林电子科技大学</b>（Guilin University Of Electronic Technology），<span class="sup--normal" data-sup="1" data-ctrmap=":1,">&nbsp;[1]</span><a class="sup-anchor" name="ref_[1]_40784">&nbsp;</a>&nbsp;简称“<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E7%94%B5/7353159" data-lemmaid="7353159">桂电</a>”，坐落在世界著名的风景游览城市——<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E6%9E%97%E5%B8%82/10989247" data-lemmaid="10989247">桂林市</a>，由<a target="_blank" href="https://baike.baidu.com/item/%E5%B7%A5%E4%B8%9A%E5%92%8C%E4%BF%A1%E6%81%AF%E5%8C%96%E9%83%A8/835197" data-lemmaid="835197">工业和信息化部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%9B%BD%E9%98%B2%E7%A7%91%E6%8A%80%E5%B7%A5%E4%B8%9A%E5%B1%80/4696487" data-lemmaid="4696487">国家国防科技工业局</a>与<a target="_blank" href="https://baike.baidu.com/item/%E5%B9%BF%E8%A5%BF%E5%A3%AE%E6%97%8F%E8%87%AA%E6%B2%BB%E5%8C%BA%E4%BA%BA%E6%B0%91%E6%94%BF%E5%BA%9C/8633217" data-lemmaid="8633217">广西壮族自治区人民政府</a>共建，<span class="sup--normal" data-sup="2-3" data-ctrmap=":2,:3,">&nbsp;[2-3]</span><a class="sup-anchor" name="ref_[2-3]_40784">&nbsp;</a>&nbsp;首批<a target="_blank" href="https://baike.baidu.com/item/%E6%96%B0%E5%B7%A5%E7%A7%91%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/22833448" data-lemmaid="22833448">新工科研究与实践项目</a>、<a target="_blank" href="https://baike.baidu.com/item/%E4%B8%AD%E8%A5%BF%E9%83%A8%E9%AB%98%E6%A0%A1%E5%9F%BA%E7%A1%80%E8%83%BD%E5%8A%9B%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B/6590386" data-lemmaid="6590386">中西部高校基础能力建设工程</a>重点建设高校，<span class="sup--normal" data-sup="4" data-ctrmap=":4,">&nbsp;[4]</span><a class="sup-anchor" name="ref_[4]_40784">&nbsp;</a>&nbsp;入选教育部<a target="_blank" href="https://baike.baidu.com/item/%E5%8D%93%E8%B6%8A%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%95%99%E8%82%B2%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92">卓越工程师教育培养计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E6%B5%B7%E5%A4%96%E9%AB%98%E5%B1%82%E6%AC%A1%E4%BA%BA%E6%89%8D%E5%BC%95%E8%BF%9B%E8%AE%A1%E5%88%92/10102618" data-lemmaid="10102618">海外高层次人才引进计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%88%9B%E6%96%B0%E6%80%A7%E5%AE%9E%E9%AA%8C%E8%AE%A1%E5%88%92/5326077" data-lemmaid="5326077">国家大学生创新性实验计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%85%A8%E5%9B%BD%E6%B7%B1%E5%8C%96%E5%88%9B%E6%96%B0%E5%88%9B%E4%B8%9A%E6%95%99%E8%82%B2%E6%94%B9%E9%9D%A9%E7%A4%BA%E8%8C%83%E9%AB%98%E6%A0%A1/22051296" data-lemmaid="22051296">全国深化创新创业教育改革示范高校</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%96%87%E5%8C%96%E7%B4%A0%E8%B4%A8%E6%95%99%E8%82%B2%E5%9F%BA%E5%9C%B0/2680904" data-lemmaid="2680904">国家大学生文化素质教育基地</a>，<span class="sup--normal" data-sup="5-6" data-ctrmap=":5,:6,">&nbsp;[5-6]</span><a class="sup-anchor" name="ref_[5-6]_40784">&nbsp;</a>&nbsp;<a target="_blank" href="https://baike.baidu.com/item//8962344" data-lemmaid="8962344"></a>是“<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E7%BA%A7%E7%89%B9%E8%89%B2%E4%B8%93%E4%B8%9A/3490017" data-lemmaid="3490017">国家级特色专业</a>”实施高校、首批高等学校科技成果转化和技术转移基地、国家<a target="_blank" href="https://baike.baidu.com/item/973%E8%AE%A1%E5%88%92">973计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%B9%BF%E8%A5%BF%E4%B8%80%E6%B5%81%E5%AD%A6%E7%A7%91%E5%BB%BA%E8%AE%BE%E9%AB%98%E6%A0%A1/22760440" data-lemmaid="22760440">广西一流学科建设高校</a>、有<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%A7%91%E6%8A%80%E5%9B%AD/9149021" data-lemmaid="9149021">国家大学科技园</a>，<span class="sup--normal" data-sup="7-8" data-ctrmap=":7,:8,">&nbsp;[7-8]</span><a class="sup-anchor" name="ref_[7-8]_40784">&nbsp;</a>&nbsp;具有<a target="_blank" href="https://baike.baidu.com/item/%E8%87%AA%E4%B8%BB%E6%8B%9B%E7%94%9F/3901599" data-lemmaid="3901599">自主招生</a>资格，是<a target="_blank" href="https://baike.baidu.com/item/%E6%80%BB%E8%A3%85%E5%A4%87%E9%83%A8/1866411" data-lemmaid="1866411">总装备部</a>通信装备预研项目定向发布的30所高校之一和<a target="_blank" href="https://baike.baidu.com/item/%E5%8C%97%E6%96%97/12640773" data-lemmaid="12640773">北斗</a>ICD授权的高校之一。<span class="sup--normal" data-sup="9" data-ctrmap=":9,">&nbsp;[9]</span><a class="sup-anchor" name="ref_[9]_40784">&nbsp;</a></div><div class="para" label-module="para">学校始建于1960年，1980年经国务院批准成立<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E6%9E%97%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E5%AD%A6%E9%99%A2/609178" data-lemmaid="609178">桂林电子工业学院</a>，2006年更名为桂林电子科技大学。学校先后隶属于<a target="_blank" href="https://baike.baidu.com/item/%E7%AC%AC%E5%9B%9B%E6%9C%BA%E6%A2%B0%E5%B7%A5%E4%B8%9A%E9%83%A8/19374517" data-lemmaid="19374517">第四机械工业部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E9%83%A8/2124987" data-lemmaid="2124987">电子工业部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E6%9C%BA%E6%A2%B0%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E9%83%A8/22480638" data-lemmaid="22480638">机械电子工业部</a>、中国电子工业总公司、<a target="_blank" href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E4%BA%A7%E4%B8%9A%E9%83%A8/2212317" data-lemmaid="2212317">信息产业部</a>。2000年管理体制转为中央与地方共建、以地方管理为主。2008年、2018年先后成为<a target="_blank" href="https://baike.baidu.com/item/%E5%B7%A5%E4%B8%9A%E5%92%8C%E4%BF%A1%E6%81%AF%E5%8C%96%E9%83%A8/835197" data-lemmaid="835197">工业和信息化部</a>与广西共建高校、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%9B%BD%E9%98%B2%E7%A7%91%E6%8A%80%E5%B7%A5%E4%B8%9A%E5%B1%80/4696487" data-lemmaid="4696487">国家国防科技工业局</a>与广西共建高校。<span class="sup--normal" data-sup="3" data-ctrmap=":3,:10,">&nbsp;[3]</span><a class="sup-anchor" name="ref_[3]_40784">&nbsp;</a>&nbsp;<span class="sup--normal" data-sup="10" data-ctrmap=":3,:10,">[10]</span><a class="sup-anchor" name="ref_[10]_40784">&nbsp;</a></div><div class="para" label-module="para">截至2018年9月，学校有金鸡岭校区、六合路校区、花江校区、北海校区，校园总面积4153亩；设有19个教学学院；有博士后科研流动站1个，一级学科<a target="_blank" href="https://baike.baidu.com/item//1163652" data-lemmaid="1163652"></a>博士点4个，一级学科硕士点18个，硕士专业学位授权类别7个，本科专业65个；有教职工2900余人，全日制在校学生40600余人。<span class="sup--normal" data-sup="10" data-ctrmap=":10,">&nbsp;[10]</span><a class="sup-anchor" name="ref_[10]_40784">&nbsp;</a></div>', createTime=2019-06-27 16:44:56.0, authorId=null, account='xtm', click=88}, NewsAuthor{id=18, author='user1', title='jpa原生sql@Query操作增删改查', content='<p>使用springboog+jpa框架，因为业务需求不能使用封装好的save（）方法，故需要在jpa容器里使用@Query注解写sql完成</p><p><br></p><p>起初，直接@Query(value="insert into 对象名(字段名) values (?1)")插入，但是一直报错unexpected token: VALUES</p><p><br></p><p>即sql语句有误，各种改，没用，后来网上查，大多数说法是jpa的jpql不支持insert into ，不经意看到一篇文章里，写的语句后面有一些不一样，试之，完美解决，所以记录下来： @Query(value = "sql语句",nativeQuery = true)</p><p><br></p><p>这里先要认识并加入一个注解 @Modifying：</p><p><br></p><p>jpa容器中使用，当使用@Query写jpql时，如果是删除或修改操作，需要加入此注解进行修饰. 以通知 　　SpringData， 这是一个 UPDATE 或 DELETE 操作 ；默认情况下，是只读，所以查询不需要</p><p><br></p>', createTime=2019-06-27 13:12:54.0, authorId=null, account='user1', click=100}, NewsAuthor{id=19, author='user1', title='数据库发展历史', content='<div class="para" label-module="para">在1970年代初，由<a target="_blank" href="https://baike.baidu.com/item/IBM">IBM</a>公司San Jose,California研究实验室的<a target="_blank" href="https://baike.baidu.com/item/%E5%9F%83%E5%BE%B7%E5%8A%A0%C2%B7%E7%A7%91%E5%BE%B7">埃德加·科德</a>发表将数据组成表格的应用原则（Codd's Relational Algebra）。1974年，同一实验室的D.D.Chamberlin和R.F. Boyce对Codd's Relational Algebra在研制关系数据库管理系统System R中，研制出一套规范语言-SEQUEL（Structured English QUEry Language），并在1976年11月的IBM Journal of R&amp;D上公布新版本的SQL（叫SEQUEL/2）。1980年改名为SQL。</div><div class="para" label-module="para">1979年ORACLE公司首先提供商用的SQL，IBM公司在DB2和SQL/DS数据库系统中也实现了SQL。</div><div class="para" label-module="para">1986年10月，美国ANSI采用SQL作为关系数据库管理系统的标准语言（ANSI X3. 135-1986），后为国际标准化组织（ISO）采纳为国际标准。</div><div class="para" label-module="para">1989年，美国ANSI采纳在ANSI X3.135-1989报告中定义的关系数据库管理系统的SQL标准语言，称为ANSI SQL 89，该标准替代ANSI X3.135-1986版本。该标准为下列组织所采纳：</div><div class="para" label-module="para">国际标准化组织（ISO），为ISO 9075-1989报告“Database Language SQL With Integrity Enhancement”</div><div class="para" label-module="para">美国联邦政府，发布在The Federal Information Processing Standard Publication(FIPS PUB)127</div><p><div class="anchor-list"><a name="4" class="lemma-anchor para-title"></a><a name="sub595350_4" class="lemma-anchor "></a><a name="数据类型" class="lemma-anchor "></a></div><div class="para-title level-2" label-module="para-title"></div></p><div class="para" label-module="para" style="text-align: start;">目前（21世纪初期）主要的关系数据库管理系统支持某些形式的SQL，大部分数据库打算遵守ANSI SQL89标准。</div>', createTime=2019-06-27 13:13:35.0, authorId=null, account='user1', click=44}, NewsAuthor{id=25, author='user2', title='测试标题1', content='<p>最近开发公司项目后台 通常查询数据都要关联很多表 有的时候表之间的关联关系没有写清楚就会出现重复数据 本来想自己写几个SQL说明SQL的链接关系 搜索的时候发现维基百科上面将的非常的清晰 直接粘贴拿来学习。</p><p><a title="SQL" href="http://zh.wikipedia.org/wiki/SQL">SQL</a>&nbsp;的连接(<code>JOIN</code>)语句将数据库中的两个或多个表组合起来.<sup id="cite_ref-1" class="reference"><a href="http://zh.wikipedia.org/zh-cn/%E8%BF%9E%E6%8E%A5_%28SQL%29#cite_note-1">[1]</a></sup>&nbsp;由"连接"生成的集合, 可以被保存为表, 或者当成表来使用.&nbsp;<code>JOIN</code>&nbsp;语句的含义是把两张表的属性通过它们的值组合在一起. 基于 ANSI 标准的 SQL 列出了五种&nbsp;<code>JOIN</code>&nbsp;方式: 内连接(<code>INNER</code>), 全外连接(<code>FULL OUTER</code>), 左外连接(<code>LEFT OUTER</code>), 右外连接(<code>RIGHT OUTER</code>)和交叉连接(<code>CROSS</code>). 在特定的情况下, 一张表(基本表, 视图, 或连接表)可以和自身进行连接, 成为自连接(<em>self-join</em>).</p><p>程序员用&nbsp;<code>JOIN</code>&nbsp;<a class="mw-redirect" title="谓词" href="http://zh.wikipedia.org/wiki/%E8%B0%93%E8%AF%8D">谓词</a>表示要得到"连接"后的集合. 如果evaluated predicate为真, 组合后的记录就会按照预期的方式生成, 如一个记录集, 或者一张临时表.</p>', createTime=2019-06-29 15:21:39.0, authorId=null, account='user2', click=14}, NewsAuthor{id=26, author='user2', title='SQL AND & OR 运算符', content='<div><p><strong>AND 和 OR 运算符用于基于一个以上的条件对记录进行过滤。</strong></p></div><div><h2>AND 和 OR 运算符</h2><p>AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。</p><p>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。</p><p>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</p></div>', createTime=2019-06-29 15:21:58.0, authorId=null, account='user2', click=87}], count=9}
2020-08-02 07:52:33.547  INFO 10228 --- [http-nio-8080-exec-7] com.xtm.controller.NewsController        : {msg=, code=0, data=[NewsAuthor{id=25, author='user2', title='测试标题1', content='<p>最近开发公司项目后台 通常查询数据都要关联很多表 有的时候表之间的关联关系没有写清楚就会出现重复数据 本来想自己写几个SQL说明SQL的链接关系 搜索的时候发现维基百科上面将的非常的清晰 直接粘贴拿来学习。</p><p><a title="SQL" href="http://zh.wikipedia.org/wiki/SQL">SQL</a>&nbsp;的连接(<code>JOIN</code>)语句将数据库中的两个或多个表组合起来.<sup id="cite_ref-1" class="reference"><a href="http://zh.wikipedia.org/zh-cn/%E8%BF%9E%E6%8E%A5_%28SQL%29#cite_note-1">[1]</a></sup>&nbsp;由"连接"生成的集合, 可以被保存为表, 或者当成表来使用.&nbsp;<code>JOIN</code>&nbsp;语句的含义是把两张表的属性通过它们的值组合在一起. 基于 ANSI 标准的 SQL 列出了五种&nbsp;<code>JOIN</code>&nbsp;方式: 内连接(<code>INNER</code>), 全外连接(<code>FULL OUTER</code>), 左外连接(<code>LEFT OUTER</code>), 右外连接(<code>RIGHT OUTER</code>)和交叉连接(<code>CROSS</code>). 在特定的情况下, 一张表(基本表, 视图, 或连接表)可以和自身进行连接, 成为自连接(<em>self-join</em>).</p><p>程序员用&nbsp;<code>JOIN</code>&nbsp;<a class="mw-redirect" title="谓词" href="http://zh.wikipedia.org/wiki/%E8%B0%93%E8%AF%8D">谓词</a>表示要得到"连接"后的集合. 如果evaluated predicate为真, 组合后的记录就会按照预期的方式生成, 如一个记录集, 或者一张临时表.</p>', createTime=2019-06-29 15:21:39.0, authorId=null, account='user2', click=14}], count=1}
2020-08-02 07:53:09.957  INFO 10228 --- [http-nio-8080-exec-2] com.xtm.controller.NewsController        : {msg=, code=0, data=[NewsAuthor{id=14, author='管理员', title='数据库管理系统', content='<p><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">数据库管理系统</a><span>（英语：Database Management System，简称DBMS）是为管理</span><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93">数据库</a><span>而设计的电脑</span><a target="_blank" href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a><span>系统，一般具有存储、截取、安全保障、备份等基础功能。数据库管理系统可以依据它所支持的</span><a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9E%8B">数据库模型</a><span>来作分类，例如关系式、</span><a target="_blank" href="https://baike.baidu.com/item/XML">XML</a><span>；或依据所支持的计算机类型来作分类，例如服务器群集、移动电话；或依据所用查询语言来作分类，例如</span><a target="_blank" href="https://baike.baidu.com/item/SQL">SQL</a><span>、</span><a target="_blank" href="https://baike.baidu.com/item/XQuery">XQuery</a><span>；或依据性能冲量重点来作分类，例如最大规模、最高运行速度；亦或其他的分类方式。不论使用哪种分类方式，一些</span><a target="_blank" href="https://baike.baidu.com/item/DBMS/1239170" data-lemmaid="1239170">DBMS</a><span>能够跨类别，例如，同时支持多种查询语言。</span><span class="sup--normal" data-sup="1" data-ctrmap=":1,">&nbsp;[1]</span><a class="sup-anchor" name="ref_[1]_1088">&nbsp;</a></p>', createTime=2019-06-27 13:00:11.0, authorId=null, account='admin', click=11}, NewsAuthor{id=15, author='管理员', title='结构化查询语言', content='<div class="para" label-module="para"><img src="http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif" alt="[草泥马]" data-w-e="1"><b>结构化查询语言</b>(Structured Query Language)简称SQL(发音：/ˈes kjuː ˈel/ "S-Q-L")，是一种特殊目的的编程语言，是一种数据库查询和<a target="_blank" href="https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/2317999" data-lemmaid="2317999">程序设计语言</a>，用于存取数据以及查询、更新和管理<a target="_blank" href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F">关系数据库系统</a>；同时也是<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/644744" data-lemmaid="644744">数据库脚本文件</a>的扩展名。</div><div class="para" label-module="para">结构化查询语言是高级的非过程化编程语言，允许用户在高层<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/1450" data-lemmaid="1450">数据结构</a>上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同<a target="_blank" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/215176" data-lemmaid="215176">数据库系统</a>, 可以使用相同的结构化查询语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能。</div><p style="text-align: left;">1986年10月，美国国家标准协会对SQL进行规范后，以此作为关系式数据库管理系统的标准语言（ANSI X3. 135-1986），1987年得到国际标准组织的支持下成为国际标准。不过各种通行的数据库系统在其实践过程中都对SQL规范作了某些编改和扩充。<i><b><u>所以，实际上不同数据库系统之间的SQL不能完全相互通用。</u></b></i></p><p><br></p>', createTime=2019-06-27 13:01:21.0, authorId=null, account='admin', click=25}, NewsAuthor{id=16, author='管理员', title='layer', content='<p><span>layui（谐音：类UI) 是一款采用自身模块规范编写的前端 UI 框架，遵循原生 HTML/CSS/JS 的书写与组织形式，门槛极低，拿来即用。其外在极简，却又不失饱满的内在，体积轻盈，组件丰盈，从核心代码到 API 的每一处细节都经过精心雕琢，非常适合界面的快速开发。layui 首个版本发布于2016年金秋，她区别于那些基于 MVVM 底层的 UI 框架，却并非逆道而行，而是信奉返璞归真之道。准确地说，她更多是为服务端程序员量身定做，你无需涉足各种前端工具的复杂配置，只需面对浏览器本身，让一切你所需要的元素与交互，从这里信手拈来。</span></p>', createTime=2019-06-27 13:11:00.0, authorId=null, account='admin', click=10}, NewsAuthor{id=17, author='管理员', title='JPA事务问题Executing an update/delete query', content='<p>如果JPA提示Executing an update/delete query，那是一定是因为Service层没有加@Transactional和再方法加@Modifying吧。</p><p><br></p><p>异常场景</p><p>spring-boot2+jpa执行新增修改删除操作时：</p><p><br></p><p>public interface UserRepository extends JpaRepository&lt;User , Integer&gt;{</p><p><br></p><p>&nbsp; &nbsp; @Modifying</p><p>&nbsp; &nbsp; @Query(value="update User c set c.state = ?1,c.lastupdatetime = ?2 where c.user_no= ?3")</p><p>&nbsp; &nbsp; void updateUser(int state,Date nowDate,String user_no);</p><p><br></p><p>}</p><p>异常： Executing an update/delete query</p><p><br></p><p>解决方案</p><p>因为jpa要求，’没有事务支持，不能执行更新和删除操作’。</p><p><br></p><p>所以反过来讲，就是在Service层或者Repository层上必须加@Transactional，来代表这是一个事务级别的操作，增删改查除了查都是事务级别的，就当这是一个规范也是ok的。</p><p>---------------------&nbsp;</p>', createTime=2019-06-27 13:12:11.0, authorId=null, account='admin', click=35}, NewsAuthor{id=21, author='熊天民', title='桂林电子科技大学', content='<div class="para" label-module="para"><b>桂林电子科技大学</b>（Guilin University Of Electronic Technology），<span class="sup--normal" data-sup="1" data-ctrmap=":1,">&nbsp;[1]</span><a class="sup-anchor" name="ref_[1]_40784">&nbsp;</a>&nbsp;简称“<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E7%94%B5/7353159" data-lemmaid="7353159">桂电</a>”，坐落在世界著名的风景游览城市——<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E6%9E%97%E5%B8%82/10989247" data-lemmaid="10989247">桂林市</a>，由<a target="_blank" href="https://baike.baidu.com/item/%E5%B7%A5%E4%B8%9A%E5%92%8C%E4%BF%A1%E6%81%AF%E5%8C%96%E9%83%A8/835197" data-lemmaid="835197">工业和信息化部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%9B%BD%E9%98%B2%E7%A7%91%E6%8A%80%E5%B7%A5%E4%B8%9A%E5%B1%80/4696487" data-lemmaid="4696487">国家国防科技工业局</a>与<a target="_blank" href="https://baike.baidu.com/item/%E5%B9%BF%E8%A5%BF%E5%A3%AE%E6%97%8F%E8%87%AA%E6%B2%BB%E5%8C%BA%E4%BA%BA%E6%B0%91%E6%94%BF%E5%BA%9C/8633217" data-lemmaid="8633217">广西壮族自治区人民政府</a>共建，<span class="sup--normal" data-sup="2-3" data-ctrmap=":2,:3,">&nbsp;[2-3]</span><a class="sup-anchor" name="ref_[2-3]_40784">&nbsp;</a>&nbsp;首批<a target="_blank" href="https://baike.baidu.com/item/%E6%96%B0%E5%B7%A5%E7%A7%91%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/22833448" data-lemmaid="22833448">新工科研究与实践项目</a>、<a target="_blank" href="https://baike.baidu.com/item/%E4%B8%AD%E8%A5%BF%E9%83%A8%E9%AB%98%E6%A0%A1%E5%9F%BA%E7%A1%80%E8%83%BD%E5%8A%9B%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B/6590386" data-lemmaid="6590386">中西部高校基础能力建设工程</a>重点建设高校，<span class="sup--normal" data-sup="4" data-ctrmap=":4,">&nbsp;[4]</span><a class="sup-anchor" name="ref_[4]_40784">&nbsp;</a>&nbsp;入选教育部<a target="_blank" href="https://baike.baidu.com/item/%E5%8D%93%E8%B6%8A%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%95%99%E8%82%B2%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92">卓越工程师教育培养计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E6%B5%B7%E5%A4%96%E9%AB%98%E5%B1%82%E6%AC%A1%E4%BA%BA%E6%89%8D%E5%BC%95%E8%BF%9B%E8%AE%A1%E5%88%92/10102618" data-lemmaid="10102618">海外高层次人才引进计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%88%9B%E6%96%B0%E6%80%A7%E5%AE%9E%E9%AA%8C%E8%AE%A1%E5%88%92/5326077" data-lemmaid="5326077">国家大学生创新性实验计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%85%A8%E5%9B%BD%E6%B7%B1%E5%8C%96%E5%88%9B%E6%96%B0%E5%88%9B%E4%B8%9A%E6%95%99%E8%82%B2%E6%94%B9%E9%9D%A9%E7%A4%BA%E8%8C%83%E9%AB%98%E6%A0%A1/22051296" data-lemmaid="22051296">全国深化创新创业教育改革示范高校</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%96%87%E5%8C%96%E7%B4%A0%E8%B4%A8%E6%95%99%E8%82%B2%E5%9F%BA%E5%9C%B0/2680904" data-lemmaid="2680904">国家大学生文化素质教育基地</a>，<span class="sup--normal" data-sup="5-6" data-ctrmap=":5,:6,">&nbsp;[5-6]</span><a class="sup-anchor" name="ref_[5-6]_40784">&nbsp;</a>&nbsp;<a target="_blank" href="https://baike.baidu.com/item//8962344" data-lemmaid="8962344"></a>是“<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E7%BA%A7%E7%89%B9%E8%89%B2%E4%B8%93%E4%B8%9A/3490017" data-lemmaid="3490017">国家级特色专业</a>”实施高校、首批高等学校科技成果转化和技术转移基地、国家<a target="_blank" href="https://baike.baidu.com/item/973%E8%AE%A1%E5%88%92">973计划</a>、<a target="_blank" href="https://baike.baidu.com/item/%E5%B9%BF%E8%A5%BF%E4%B8%80%E6%B5%81%E5%AD%A6%E7%A7%91%E5%BB%BA%E8%AE%BE%E9%AB%98%E6%A0%A1/22760440" data-lemmaid="22760440">广西一流学科建设高校</a>、有<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%A4%A7%E5%AD%A6%E7%A7%91%E6%8A%80%E5%9B%AD/9149021" data-lemmaid="9149021">国家大学科技园</a>，<span class="sup--normal" data-sup="7-8" data-ctrmap=":7,:8,">&nbsp;[7-8]</span><a class="sup-anchor" name="ref_[7-8]_40784">&nbsp;</a>&nbsp;具有<a target="_blank" href="https://baike.baidu.com/item/%E8%87%AA%E4%B8%BB%E6%8B%9B%E7%94%9F/3901599" data-lemmaid="3901599">自主招生</a>资格，是<a target="_blank" href="https://baike.baidu.com/item/%E6%80%BB%E8%A3%85%E5%A4%87%E9%83%A8/1866411" data-lemmaid="1866411">总装备部</a>通信装备预研项目定向发布的30所高校之一和<a target="_blank" href="https://baike.baidu.com/item/%E5%8C%97%E6%96%97/12640773" data-lemmaid="12640773">北斗</a>ICD授权的高校之一。<span class="sup--normal" data-sup="9" data-ctrmap=":9,">&nbsp;[9]</span><a class="sup-anchor" name="ref_[9]_40784">&nbsp;</a></div><div class="para" label-module="para">学校始建于1960年，1980年经国务院批准成立<a target="_blank" href="https://baike.baidu.com/item/%E6%A1%82%E6%9E%97%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E5%AD%A6%E9%99%A2/609178" data-lemmaid="609178">桂林电子工业学院</a>，2006年更名为桂林电子科技大学。学校先后隶属于<a target="_blank" href="https://baike.baidu.com/item/%E7%AC%AC%E5%9B%9B%E6%9C%BA%E6%A2%B0%E5%B7%A5%E4%B8%9A%E9%83%A8/19374517" data-lemmaid="19374517">第四机械工业部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E9%83%A8/2124987" data-lemmaid="2124987">电子工业部</a>、<a target="_blank" href="https://baike.baidu.com/item/%E6%9C%BA%E6%A2%B0%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A%E9%83%A8/22480638" data-lemmaid="22480638">机械电子工业部</a>、中国电子工业总公司、<a target="_blank" href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E4%BA%A7%E4%B8%9A%E9%83%A8/2212317" data-lemmaid="2212317">信息产业部</a>。2000年管理体制转为中央与地方共建、以地方管理为主。2008年、2018年先后成为<a target="_blank" href="https://baike.baidu.com/item/%E5%B7%A5%E4%B8%9A%E5%92%8C%E4%BF%A1%E6%81%AF%E5%8C%96%E9%83%A8/835197" data-lemmaid="835197">工业和信息化部</a>与广西共建高校、<a target="_blank" href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E5%9B%BD%E9%98%B2%E7%A7%91%E6%8A%80%E5%B7%A5%E4%B8%9A%E5%B1%80/4696487" data-lemmaid="4696487">国家国防科技工业局</a>与广西共建高校。<span class="sup--normal" data-sup="3" data-ctrmap=":3,:10,">&nbsp;[3]</span><a class="sup-anchor" name="ref_[3]_40784">&nbsp;</a>&nbsp;<span class="sup--normal" data-sup="10" data-ctrmap=":3,:10,">[10]</span><a class="sup-anchor" name="ref_[10]_40784">&nbsp;</a></div><div class="para" label-module="para">截至2018年9月，学校有金鸡岭校区、六合路校区、花江校区、北海校区，校园总面积4153亩；设有19个教学学院；有博士后科研流动站1个，一级学科<a target="_blank" href="https://baike.baidu.com/item//1163652" data-lemmaid="1163652"></a>博士点4个，一级学科硕士点18个，硕士专业学位授权类别7个，本科专业65个；有教职工2900余人，全日制在校学生40600余人。<span class="sup--normal" data-sup="10" data-ctrmap=":10,">&nbsp;[10]</span><a class="sup-anchor" name="ref_[10]_40784">&nbsp;</a></div>', createTime=2019-06-27 16:44:56.0, authorId=null, account='xtm', click=88}, NewsAuthor{id=18, author='user1', title='jpa原生sql@Query操作增删改查', content='<p>使用springboog+jpa框架，因为业务需求不能使用封装好的save（）方法，故需要在jpa容器里使用@Query注解写sql完成</p><p><br></p><p>起初，直接@Query(value="insert into 对象名(字段名) values (?1)")插入，但是一直报错unexpected token: VALUES</p><p><br></p><p>即sql语句有误，各种改，没用，后来网上查，大多数说法是jpa的jpql不支持insert into ，不经意看到一篇文章里，写的语句后面有一些不一样，试之，完美解决，所以记录下来： @Query(value = "sql语句",nativeQuery = true)</p><p><br></p><p>这里先要认识并加入一个注解 @Modifying：</p><p><br></p><p>jpa容器中使用，当使用@Query写jpql时，如果是删除或修改操作，需要加入此注解进行修饰. 以通知 　　SpringData， 这是一个 UPDATE 或 DELETE 操作 ；默认情况下，是只读，所以查询不需要</p><p><br></p>', createTime=2019-06-27 13:12:54.0, authorId=null, account='user1', click=100}, NewsAuthor{id=19, author='user1', title='数据库发展历史', content='<div class="para" label-module="para">在1970年代初，由<a target="_blank" href="https://baike.baidu.com/item/IBM">IBM</a>公司San Jose,California研究实验室的<a target="_blank" href="https://baike.baidu.com/item/%E5%9F%83%E5%BE%B7%E5%8A%A0%C2%B7%E7%A7%91%E5%BE%B7">埃德加·科德</a>发表将数据组成表格的应用原则（Codd's Relational Algebra）。1974年，同一实验室的D.D.Chamberlin和R.F. Boyce对Codd's Relational Algebra在研制关系数据库管理系统System R中，研制出一套规范语言-SEQUEL（Structured English QUEry Language），并在1976年11月的IBM Journal of R&amp;D上公布新版本的SQL（叫SEQUEL/2）。1980年改名为SQL。</div><div class="para" label-module="para">1979年ORACLE公司首先提供商用的SQL，IBM公司在DB2和SQL/DS数据库系统中也实现了SQL。</div><div class="para" label-module="para">1986年10月，美国ANSI采用SQL作为关系数据库管理系统的标准语言（ANSI X3. 135-1986），后为国际标准化组织（ISO）采纳为国际标准。</div><div class="para" label-module="para">1989年，美国ANSI采纳在ANSI X3.135-1989报告中定义的关系数据库管理系统的SQL标准语言，称为ANSI SQL 89，该标准替代ANSI X3.135-1986版本。该标准为下列组织所采纳：</div><div class="para" label-module="para">国际标准化组织（ISO），为ISO 9075-1989报告“Database Language SQL With Integrity Enhancement”</div><div class="para" label-module="para">美国联邦政府，发布在The Federal Information Processing Standard Publication(FIPS PUB)127</div><p><div class="anchor-list"><a name="4" class="lemma-anchor para-title"></a><a name="sub595350_4" class="lemma-anchor "></a><a name="数据类型" class="lemma-anchor "></a></div><div class="para-title level-2" label-module="para-title"></div></p><div class="para" label-module="para" style="text-align: start;">目前（21世纪初期）主要的关系数据库管理系统支持某些形式的SQL，大部分数据库打算遵守ANSI SQL89标准。</div>', createTime=2019-06-27 13:13:35.0, authorId=null, account='user1', click=44}, NewsAuthor{id=25, author='user2', title='测试标题1', content='<p>最近开发公司项目后台 通常查询数据都要关联很多表 有的时候表之间的关联关系没有写清楚就会出现重复数据 本来想自己写几个SQL说明SQL的链接关系 搜索的时候发现维基百科上面将的非常的清晰 直接粘贴拿来学习。</p><p><a title="SQL" href="http://zh.wikipedia.org/wiki/SQL">SQL</a>&nbsp;的连接(<code>JOIN</code>)语句将数据库中的两个或多个表组合起来.<sup id="cite_ref-1" class="reference"><a href="http://zh.wikipedia.org/zh-cn/%E8%BF%9E%E6%8E%A5_%28SQL%29#cite_note-1">[1]</a></sup>&nbsp;由"连接"生成的集合, 可以被保存为表, 或者当成表来使用.&nbsp;<code>JOIN</code>&nbsp;语句的含义是把两张表的属性通过它们的值组合在一起. 基于 ANSI 标准的 SQL 列出了五种&nbsp;<code>JOIN</code>&nbsp;方式: 内连接(<code>INNER</code>), 全外连接(<code>FULL OUTER</code>), 左外连接(<code>LEFT OUTER</code>), 右外连接(<code>RIGHT OUTER</code>)和交叉连接(<code>CROSS</code>). 在特定的情况下, 一张表(基本表, 视图, 或连接表)可以和自身进行连接, 成为自连接(<em>self-join</em>).</p><p>程序员用&nbsp;<code>JOIN</code>&nbsp;<a class="mw-redirect" title="谓词" href="http://zh.wikipedia.org/wiki/%E8%B0%93%E8%AF%8D">谓词</a>表示要得到"连接"后的集合. 如果evaluated predicate为真, 组合后的记录就会按照预期的方式生成, 如一个记录集, 或者一张临时表.</p>', createTime=2019-06-29 15:21:39.0, authorId=null, account='user2', click=14}, NewsAuthor{id=26, author='user2', title='SQL AND & OR 运算符', content='<div><p><strong>AND 和 OR 运算符用于基于一个以上的条件对记录进行过滤。</strong></p></div><div><h2>AND 和 OR 运算符</h2><p>AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。</p><p>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。</p><p>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</p></div>', createTime=2019-06-29 15:21:58.0, authorId=null, account='user2', click=87}], count=9}
2020-08-02 07:54:45.975  WARN 10228 --- [http-nio-8080-exec-6] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1054, SQLState: 42S22
2020-08-02 07:54:45.976 ERROR 10228 --- [http-nio-8080-exec-6] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unknown column 'ne.news_id' in 'where clause'
2020-08-02 07:54:46.010 ERROR 10228 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/ai].[dispatcherServlet]  : Servlet.service() for servlet [dispatcherServlet] in context with path [/ai] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause

java.sql.SQLSyntaxErrorException: Unknown column 'ne.news_id' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-3.2.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.Query.getResultList(Query.java:132) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.sun.proxy.$Proxy112.findNewsById(Unknown Source) ~[na:na]
	at com.xtm.service.NewsService.getNewsById(NewsService.java:51) ~[classes/:na]
	at com.xtm.service.NewsService$$FastClassBySpringCGLIB$$f3efbc9f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.xtm.service.NewsService$$EnhancerBySpringCGLIB$$113b938a.getNewsById(<generated>) ~[classes/:na]
	at com.xtm.controller.NewsController.newsUpdate(NewsController.java:49) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:567) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.lang.Thread.run(Thread.java:835) ~[na:na]

2020-08-02 07:54:55.765  WARN 10228 --- [http-nio-8080-exec-9] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1054, SQLState: 42S22
2020-08-02 07:54:55.765 ERROR 10228 --- [http-nio-8080-exec-9] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unknown column 'ne.news_id' in 'where clause'
2020-08-02 07:54:55.768 ERROR 10228 --- [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/ai].[dispatcherServlet]  : Servlet.service() for servlet [dispatcherServlet] in context with path [/ai] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause

java.sql.SQLSyntaxErrorException: Unknown column 'ne.news_id' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-3.2.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.Query.getResultList(Query.java:132) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.sun.proxy.$Proxy112.findNewsById(Unknown Source) ~[na:na]
	at com.xtm.service.NewsService.getNewsById(NewsService.java:51) ~[classes/:na]
	at com.xtm.service.NewsService$$FastClassBySpringCGLIB$$f3efbc9f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.xtm.service.NewsService$$EnhancerBySpringCGLIB$$113b938a.getNewsById(<generated>) ~[classes/:na]
	at com.xtm.controller.NewsController.newsUpdate(NewsController.java:49) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:567) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.lang.Thread.run(Thread.java:835) ~[na:na]

2020-08-02 07:54:58.490  WARN 10228 --- [http-nio-8080-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1054, SQLState: 42S22
2020-08-02 07:54:58.490 ERROR 10228 --- [http-nio-8080-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unknown column 'ne.news_id' in 'where clause'
2020-08-02 07:54:58.493 ERROR 10228 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/ai].[dispatcherServlet]  : Servlet.service() for servlet [dispatcherServlet] in context with path [/ai] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause

java.sql.SQLSyntaxErrorException: Unknown column 'ne.news_id' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-3.2.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.hibernate.query.Query.getResultList(Query.java:132) ~[hibernate-core-5.3.10.Final.jar:5.3.10.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138) ~[spring-data-jpa-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.8.RELEASE.jar:2.1.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.sun.proxy.$Proxy112.findNewsById(Unknown Source) ~[na:na]
	at com.xtm.service.NewsService.getNewsById(NewsService.java:51) ~[classes/:na]
	at com.xtm.service.NewsService$$FastClassBySpringCGLIB$$f3efbc9f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at com.xtm.service.NewsService$$EnhancerBySpringCGLIB$$113b938a.getNewsById(<generated>) ~[classes/:na]
	at com.xtm.controller.NewsController.newsUpdate(NewsController.java:49) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:567) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.base/java.lang.Thread.run(Thread.java:835) ~[na:na]

